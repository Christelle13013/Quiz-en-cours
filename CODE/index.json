[
{
    "Question" : "Parmi les affirmations suivantes, laquelle est fausse ?",
    "réponse" : [
        {
            "réponse 1" : "Le header sert à indiquer l'en-tête de la page au navigateur",
            "réponse 2" : "On trouve souvent les liens vers les réseaux sociaux et mentions légales dans le footer",
            "réponse 3" : "Le style de la page web se pratique dans le html",
            "réponse 4" : "Le contenu principal de la page se trouve dans la balise <main>"
        }
    ],
    "information" : "Réponse 3 Le style d'une page web se gère dans un fichier CSS"
},



{
    "Question" : "A quoi sert l'attribut alt de l'élément img ?",
    "réponse" : [
        {
            "réponse 1" : "A donner une description de l'image si celle-ci ne peut pas s'afficher",
            "réponse 2" : "A donner un lien alternatif vers l'image si le premier est cassé",
            "réponse 3" : "A afficher une deuxième image si la première ne peut pas s'afficher",
            "réponse 4" : "A afficher une image en format png"
        }
    ],
    "information" : "Réponse 1 L'attribut alt sert à décrire l'image. Cela est essentiel dans le cas où l'image ne pourrait pas être affichée ainsi que pour les personnes mal voyantes ou non voyantes"
},



{
    "Question" : "Parmi les éléments suivants, lesquels sont nativement des éléments Inline qui vont se mettre les uns à la suite des autressans prendre toute la largeur ?",
    "réponse" : [
        {
            "réponse 1" : "main",
            "réponse 2" : "span",
            "réponse 3" : "a",
            "réponse 4" : "p"
        }
    ],
    "information" : "Réponse 2 et 3 : L'élément <main>, ainsi que <p>, tout comme <div> ou les headings, sont des éléments Block."
},



{
    "Question" : "Quelle propriété appliquée sur un élément dans une mise en page Flexbox permet de modifier l'ordre des éléments en les réagençant sans modifier le html ?",
    "réponse" : [
        {
            "réponse 1" : "flex-direction",
            "réponse 2" : "align-items",
            "réponse 3" : "order",
            "réponse 4" : "flex"
        }
    ],
    "information" : "Réponse 3 : Flex-direction : permet de donner une orientation verticale ou horizontale à vos éléments. align-items, quant à lui, vous permet d'aligner vos éléments sur l'axe secondaire. Pour ce qui est de flex, il s'agit d'une propriété raccourcie qui permet notamment d'autoriser un élément à prendre plus de place que d'autres. C'est bien order qui permet de modifier l'ordre des éléments sans modifier le html."
},



{
    "Question" : "Parmis les affirmations suivantes, laquelle est exacte ?",
    "réponse" : [
        {
            "réponse 1" : "Les unités fr fonctionnent exactement de la même manière que les pourcentages",
            "réponse 2" : "Les gap permettent d'espacer les éléments entre eux dans les CSS Grids",
            "réponse 3" : "On définit les colonnes avec grid-template-rows",
            "réponse 4" : "Il est impossible de définir le point de départ d'un élément spécifique dans une grid"
        }
    ],
    "information" : "Réponse 2 : Les unités fr vont permettre de prendre toute la largeur de l'écran sans dépasser, malgré les différents padding et margin ; en cela, elles ne sont pas pareilles que les pourcentages. Pour leur part les gap, vont permettre d'espacer les éléments entre eux de manière simple. Les colonnes, quant à elles, sont définies par grid-temlate-columns et non grid-template-rows. Enfin, on peut définir le point de départ d'un élément spécifique avec grid-column-start."
},



{
    "Question" : "Qu'elles sont les options offertes par la propriété display ?",
    "réponse" : [
        {
            "réponse 1" : "Transformer un élément inline en élément block",
            "réponse 2" : "Cacher entièrement un élément",
            "réponse 3" : "Profiter des avantages de l'inline et de ceux des block",
            "réponse 4" : "Superposer des éléments"
        }
    ],
    "information" : "La propriété display est pleine de ressources et encore tout ce qu'elle permet n'est pas couvert par cette question. Elle permet notamment de transformer un élément inline en un élément block et inversement. On peut également cacher un élément avec display:none et enfin, display:inline-bloc permet de profiter du meilleur des deux mondes. En revanche c'est position qui permet de superposer des éléments."
},



{
    "Question" : "Qu'elles phrases ci-dessous sont vraie au sujet des constantes ?",
    "réponse" : [
        {
            "réponse 1" : "Une fois déclarées, leur valeur ne peut être modifiée",
            "réponse 2" : "On peut déclarer une constante sans l'initialisser",
            "réponse 3" : "Elles peuvent être utiles pour éviter les erreurs et comportements inattentdus",
            "réponse 4" : "Leur type peut-être modifié après déclaration"
        }
    ],
    "information" : "Les constantes peuvent aider à éviter les erreurs et comportements inattendus, car elles ne peuvent pas être modifiées accidentellement. On ne peut pas déclarer une constante sans l'initialiser et son type ne peut être modifié."
},



{
    "Question" : "En JavaScript, un objet est déclaré comme une liste de paires clé/valeur entre...",
    "réponse" : [
        {
            "réponse 1" : "{} accolades",
            "réponse 2" : "[] crochets",
            "réponse 3" : "() parenthèses",
            "réponse 4" : "aucune des réponses ci-dessus"
        }
    ],
    "information" : "Les objets sont déclarés entre accolades {}."
},



{
    "Question" : "On déclare un array (tableau) comme une liste d'éléments, séparés par des virgules entre...",
    "réponse" : [
        {
            "réponse 1" : "{} accolades",
            "réponse 2" : "[] crochets",
            "réponse 3" : "() parenthèses",
            "réponse 4" : "aucune des réponses ci-dessus"
        }
    ],
    "information" : "On déclare un array entre crochets []."
},



{
    "Question" : "Comment feriez-vous pour calculer le nombre d'éléments dans l'array onliUsers ?",
    "réponse" : [
        {
            "réponse 1" : "let numberOfUsers = onlinUsers.size;",
            "réponse 2" : "let numberOfUsers = onlineUsers.quanttity;",
            "réponse 3" : "let numberOfUsers = onlineUsers.index;",
            "réponse 4" : "let numberOfUsers = onlineUsers.lenght;"
        }
    ],
    "information" : "La propriété lenght d'un array correspond au nombre d'éléments qu'il contient."
},



{
    "Question" : "Quelles propositions correspondent à des types primitifs en JavaScript ?",
    "réponse" : [
        {
            "réponse 1" : "String",
            "réponse 2" : "Array",
            "réponse 3" : "Number",
            "réponse 4" : "Boolean"
        }
    ],
    "information" : "Les trois types primitifs les plus courants en JavaScript sont string, number et boolean. Les array sont des types plus complexes."
},



{
    "Question" : "Parmi les propositions suivantes, laquelle correspond à une déclaration et une initialisation de variable valable ?",
    "réponse" : [
        {
            "réponse 1" : "let my variable = 12;",
            "réponse 2" : "let myVariable = 12;",
            "réponse 3" : "variable myVariable = 12;",
            "réponse 4" : "let 12 = myVariable;"
        }
    ],
    "information" : "La déclaration et l'initialisation de variables valables nécessite le mot-clé let, le nom de la variable (en un seul mot), l'opérateur d'assignation =, la valeur souhaitée pour la variable et un point-virgule ; (dans cet ordre)."
},



{
    "Question" : "Quel est l'unité de 'unsigned' ?",
    "réponse" : [
        {
            "réponse 1" : "Déclarer un plugin sans certificat",
            "réponse 2" : "Prendre la valeur absolue d'un nombre",
            "réponse 3" : "n'existe pas en JavaScript",
            "réponse 4" : "Déclarer un entier non signé"
        }
    ],
    "information" : "Réponse 3 : L'unité 'unsigned' n'existe pas en JavaScript"
},



{
    "Question" : "Quelle propriété CSS utilise t-on pour 'coller' les bordures d'un tableau ?",
    "réponse" : [
        {
            "réponse 1" : "La propriété border",
            "réponse 2" : "La propriété border-radius",
            "réponse 3" : "La propriété border-collapse",
            "réponse 4" : "La propriété border solid"
        }
    ],
    "information" : "Réponse 3 : On utilise la propriété CSS border-collapse et sa valeur 'collapse' afin de coller les bordures des cellules de notre tableau entre elles."
},



{
    "Question" : "Quel élément HTML sert à définir une ligne d'en tête pour notre tableau ?",
    "réponse" : [
        {
            "réponse 1" : "L'élément tr",
            "réponse 2" : "L'élément th",
            "réponse 3" : "L'élément thead",
            "réponse 4" : "L'élément td"
        }
    ],
    "information" : "Réponse 2 : L'élément th sert spécifiquement à définir une ligne d'en tête dans un tableau. L'élément thead, lui, est utiilsé pour structurer un tableau en le séparant en différentes parties."
},



{
    "Question" : "Lequel de ces attributs permet de faire se répéter en boucle une piste audio ou une vidéo ?",
    "réponse" : [
        {
            "réponse 1" : "L'attribut preload",
            "réponse 2" : "L'attribut loop",
            "réponse 3" : "L'attribut autoplay",
            "réponse 4" : "L'attribut play"
        }
    ],
    "information" : "Réponse 2 : L'attribut preload sert à précharger un fichier audio ou vidéo tandis que autoplay sert à lancer automatiquement un fichier audio ou vidéo dès que celui-ci est chargé."
},



{
    "Question" : "A quoi sert un préfixe vendeur ?",
    "réponse" : [
        {
            "réponse 1" : "A vendre plus pour un site e-commerce",
            "réponse 2" : "A forcer la compatibilité d'une propriété CSS pour certaines versions de certains navigateurs",
            "réponse 3" : "A créer des dégradés pour tous les navigateurs",
            "réponse 4" : "A créer des dégradés seulement pour Microsoft Edge"
        }
    ],
    "information" : "Réponse 2 : Les préfixes vendeurs vont pouvoir être utilisés afin que d'anciennes versions de certains navigateurs puissent lire certaines propriétés CSS récentes."
},



{
    "Question" : "Quel est le préfixe vendeur de Mozilla Firefox ?",
    "réponse" : [
        {
            "réponse 1" : "-webkit-",
            "réponse 2" : "-o-",
            "réponse 3" : "-moz-",
            "réponse 4" : "-mozilla-"
        }
    ],
    "information" : "Réponse 3 : -webkit- est la préfixe utilisé pour Chrome et Safari tandis que -o- est le préfixe pour le navigateur Opéra."
},



{
    "Question" : "Le séléecteur CSS étoile (*) sert à...",
    "réponse" : [
        {
            "réponse 1" : "Appliquer des bordures aux éléments",
            "réponse 2" : "Sélectionner tous les éléments d'une page HTML",
            "réponse 3" : "Sélectionner un élément possédant un attribut en particulier",
            "réponse 4" : "Sélectionner tous les éléments d'un body"
        }
    ],
    "information" : "Réponse 2 : Le sélecteur étoile est également appelé 'sélecteur CSS universel' car il sert à cibler tous les éléments HTML d'une page d'un coup."
},



{
    "Question" : "Le sélecteur div + p sert à sélectionner...",
    "réponse" : [
        {
            "réponse 1" : "Le premier élément p enfant d'un div",
            "réponse 2" : "Tous les éléments p enfants dans un div",
            "réponse 3" : "Tous les éléments p suivants un div (et de même niveau)",
            "réponse 4" : "Tous les éléments p petit-enfant d'un div"
        }
    ],
    "information" : "Réponse 3. Le sélecteur div + p sert à sélectionner tous les éléments p suivants directement un div dans notre page et étant de même niveau. Pour sélectionner tous les paragraphes dans nos div, nous utiliserons le sélecteur div p."
},



{
    "Question" : "Lequel de ces éléments HTML sert à définir un formulaire ?",
    "réponse" : [
        {
            "réponse 1" : "L'élément form",
            "réponse 2" : "L'élément input",
            "réponse 3" : "L'élément label",
            "réponse 4" : "L'élément defer"
        }
    ],
    "information" : "Réponse 1 : L'élément form sert à définir un formulaire en HTML."
},



{
    "Question" : "L'élément form doit obligatoirement être accompagné...",
    "réponse" : [
        {
            "réponse 1" : "D'un attribut method",
            "réponse 2" : "D'un attribut action",
            "réponse 3" : "De deux attributs method et action",
            "réponse 4" : "Aucun des deux"
        }
    ],
    "information" : "Réponse 3 : Pour qu'on formulaire fonctionne correctement, vous devez préciser deux attributs method et action dans la balise ouvrante de votre élément form."
},



{
    "Question" : "Laquelle de ces trois écirtures est correcte",
    "réponse" : [
        {
            "réponse 1" : "@media screen and max-width = 680px",
            "réponse 2" : "@media screen and (max-width: 680px)",
            "réponse 3" : "@media screen and (max-width = 680px)",
            "réponse 4" : "@media screen and (min-max-width: 680px)"
        }
    ],
    "information" : "Réponse 2 : On n'utilise jamais le signe égal en CSS pour définir une taille. Faites bien attention aux parenthèses en utilisant les media queries !"
},



{
    "Question" : "Lorsqu'on utilise des valeurs en pourcentage pour redimensionner un élément en CSS, la valeur donnée à un élément dépend...",
    "réponse" : [
        {
            "réponse 1" : "De sa taille de départ",
            "réponse 2" : "De la taille de la fenêtre",
            "réponse 3" : "De la taille de son élément parent",
            "réponse 4" : "De la taille de son élément enfant"
        }
    ],
    "information" : "Réponse 3 : Lorsqu'on applique une valeur relative à un élément en CSS pour le redimensionner, le pourcentage donné est toujours un pourcentage de la taille de son élément parent."
},



{
    "Question" : "Pourquoi utiliser des sprites d'images ?",
    "réponse" : [
        {
            "réponse 1" : "Pour diminuer le nombre de requêtes envoyées au serveur",
            "réponse 2" : "Par simplicité pour insérer des images",
            "réponse 3" : "Car cela crée des images plus jolies",
            "réponse 4" : "Pour gérer la taille des images"
        }
    ],
    "information" : "Réponse 1 : On utilise les sprites d'images afin de diminuer le nombre de requêtes envoyées au serveur et ainsi d'optimiser la vitesse de nos sites."
}


]